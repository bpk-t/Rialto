<controls:MetroWindow x:Class="Rialto.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:Rialto.Views"
        xmlns:vm="clr-namespace:Rialto.ViewModels"
        xmlns:vmc="clr-namespace:Rialto.ViewModels.Contents"
        xmlns:model="clr-namespace:Rialto.Models"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:properties="clr-namespace:Rialto.Properties"
        xmlns:behaviors="clr-namespace:Rialto.Views.Behaviors"
        Title="MainWindow" Height="800" Width="1400"
        SaveWindowPosition="True">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>

    <!--
    Debug用
    <Grid ShowGridLines="True">
    -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="15px" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <!-- メニューバー -->
        <Menu Grid.Row="0" Grid.ColumnSpan="4">
            <MenuItem Header="{x:Static properties:Resources.MenuItemFile}">
                <MenuItem Header="{x:Static properties:Resources.MenuItemCreateNewDB}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding CreateNewDBCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="{x:Static properties:Resources.MenuItemOpenDB}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <l:OpenFileDialogInteractionMessageAction>
                                <l:DirectInteractionMessage CallbackCommand="{Binding OpenDBCommand, Mode=OneWay}">
                                    <l:OpeningFileSelectionMessage Filter="すべてのファイル(*.*)|*.*" Title="ファイルを開く" MultiSelect="False"/>
                                </l:DirectInteractionMessage>
                            </l:OpenFileDialogInteractionMessageAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="エクスポート(_E)" />
            </MenuItem>
            <MenuItem Header="表示(_V)">
                <MenuItem Header="シャッフル(_S)" />
                <MenuItem Header="リバース(_R)" />
            </MenuItem>
            <MenuItem Header="タグ(_T)">
                <MenuItem Header="タグ設定画面の表示">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding ShowTagSettingWindowCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </MenuItem>
                <MenuItem Header="タグリストの更新" />
            </MenuItem>

            <MenuItem Header="検索(_S)">
                <MenuItem Header="重複画像検索" />
                <MenuItem Header="閲覧時間の長い画像を検索" />
                <MenuItem Header="検索ダイアログを表示する" />
                <MenuItem Header="スコアの高い画像を検索" />
                <MenuItem Header="タグが一つの画像を検索" />
            </MenuItem>

            <MenuItem Header="ツール(_T)">
                <MenuItem Header="設定(_S)" />
                <MenuItem Header="スコア決定" />
                <MenuItem Header="タグ付加実績を表示" />
            </MenuItem>
        </Menu>

        <!-- タグツリー -->
        <StackPanel Grid.Row="1" Grid.Column="0" Grid.RowSpan="2" Margin="5" Orientation="Vertical">
            <TextBox Text="{Binding SearchTagText}" Margin="5">
                <i:Interaction.Behaviors>
                    <behaviors:PlaceHolderBehavior PlaceHolderText="検索" />
                </i:Interaction.Behaviors>
            </TextBox>
            
            <TreeView Name="TagTreeList" Margin="5" ItemsSource="{Binding TagTreeItems}">
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type vmc:TagTreeNode}" ItemsSource="{Binding Children}">
                        <TextBlock Text="{Binding Name}" />
                    </HierarchicalDataTemplate>
                </TreeView.Resources>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectedItemChanged">
                        <ei:ChangePropertyAction TargetObject="{Binding Mode=OneWay}" PropertyName="SelectedTagNode" Value="{Binding Path=SelectedItem, ElementName=TagTreeList}"/>
                        <i:InvokeCommandAction Command="{Binding TagTreeSelectionChangedCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TreeView>
        </StackPanel>
        
        <GridSplitter Grid.Row="1" Grid.Column="1" Grid.RowSpan="2"  Width="5" HorizontalAlignment="Center"/>

        <!-- サムネイルリスト -->
        <ListView Name="ThumbnailList"  Grid.Row="1" Grid.Column="2" Grid.RowSpan="2" Margin="5" ItemsSource="{Binding ThumbnailImgList}" 
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <Image Margin="2" Source="{Binding DispImage, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock HorizontalAlignment="Center" Text="{Binding DispImageName}"></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>

            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel ItemHeight="{Binding ThumbnailItemSizeHeight}" ItemWidth="{Binding ThumbnailItemSizeWidth}"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <!-- 右クリックメニュー -->
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="タグをコピーする"></MenuItem>
                    <MenuItem Header="タグを貼り付ける"></MenuItem>
                    <MenuItem Header="削除"></MenuItem>
                </ContextMenu>
            </ListView.ContextMenu>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <ei:ChangePropertyAction TargetObject="{Binding Mode=OneWay}" PropertyName="SelectedThumbnailImgList" Value="{Binding Path=SelectedItems, ElementName=ThumbnailList}"/>
                    <i:InvokeCommandAction Command="{Binding ListViewChengedCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListView>

        <!-- 画像情報エリア -->
        <StackPanel Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Stretch">
            <Border BorderThickness="2" BorderBrush="LightBlue">
                <Button>
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Image Width="200" Height="200" Source="{Binding SideImage}"></Image>
                        </ControlTemplate>
                    </Button.Template>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding OpenFullScreenViewCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </Border>
            <StackPanel Orientation="Vertical" Margin="5" HorizontalAlignment="Stretch">
                <TextBlock HorizontalAlignment="Stretch">既存のタグ</TextBlock>
                <ListView ItemsSource="{Binding ExistsTags}" HorizontalAlignment="Stretch">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
        </StackPanel>

        <!-- タグ設定タブ -->
        <TabControl x:Name="tabControl" Grid.Row="2" Grid.Column="3" Margin="5" ItemsSource="{Binding TabPanels}">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Header}" />
                </DataTemplate>
            </TabControl.ItemTemplate>

            <TabControl.ContentTemplate>
                <DataTemplate>
                    <Border  BorderThickness="2" BorderBrush="LightBlue">
                        <ItemsControl ItemsSource="{Binding Buttons}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Button Content="{Binding Name}" Margin="4" FontSize="16" Command="{Binding ClickCommand}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel ItemHeight="40" ItemWidth="100" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Border>
                </DataTemplate>
            </TabControl.ContentTemplate>

        </TabControl>
    </Grid>
</controls:MetroWindow>
