<Window x:Class="Rialto.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:Rialto.Views"
        xmlns:vm="clr-namespace:Rialto.ViewModels"
        xmlns:dmodel="clr-namespace:Rialto.Model.DataModel"
        xmlns:model="clr-namespace:Rialto.Models"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:properties="clr-namespace:Rialto.Properties"
        xmlns:behaviors="clr-namespace:Rialto.Views.Behaviors"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Title="Rialto" Height="1400" Width="2000">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
        <DataTemplate DataType="{x:Type vm:ErrorDialogViewModel}">
            <v:ErrorDialog/>
        </DataTemplate>
    </Window.Resources>

    <i:Interaction.Triggers>

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <l:InteractionMessageTrigger MessageKey="ShowTagSetting" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type v:TagSettingWindow}" Mode="Modal"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="ShowFullScreen" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction WindowType="{x:Type v:FullScreen}" Mode="Modal"/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <materialDesign:DialogHost DialogContent="{Binding ErrorDialog}" IsOpen="{Binding ErrorDialogIsOpen}">
        <Grid ShowGridLines="False">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="20px" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <!-- メニューバー -->
                <Menu>
                    <MenuItem Header="ファイル(_F)">
                        <MenuItem Header="DBを新規作成(_N)" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <l:SaveFileDialogInteractionMessageAction>
                                        <l:DirectInteractionMessage CallbackMethodTarget="{Binding}" CallbackMethodName="CreateNewDB">
                                            <l:SavingFileSelectionMessage Filter="すべてのファイル(*.*)|*.*" Title="新規DBを作成" />
                                        </l:DirectInteractionMessage>
                                    </l:SaveFileDialogInteractionMessageAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </MenuItem>

                        <MenuItem Header="既存のDBを開く(_O)">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <l:OpenFileDialogInteractionMessageAction>
                                        <l:DirectInteractionMessage CallbackMethodTarget="{Binding}" CallbackMethodName="OpenDB">
                                            <l:OpeningFileSelectionMessage Filter="すべてのファイル(*.*)|*.*" Title="ファイルを開く" MultiSelect="False"/>
                                        </l:DirectInteractionMessage>
                                    </l:OpenFileDialogInteractionMessageAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </MenuItem>
                        <MenuItem Header="エクスポート(_E)" />
                    </MenuItem>
                    <MenuItem Header="表示(_V)">
                        <MenuItem Header="シャッフル(_S)" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Shuffle"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </MenuItem>
                        <MenuItem Header="リバース(_R)" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Reverse"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="タグ(_T)">
                        <MenuItem Header="タグ設定画面の表示">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="ShowTagSettingWindow"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </MenuItem>
                        <MenuItem Header="タグリストの更新" />
                    </MenuItem>

                    <MenuItem Header="検索(_S)">
                        <MenuItem Header="重複画像検索" />
                        <MenuItem Header="閲覧時間の長い画像を検索" />
                        <MenuItem Header="検索ダイアログを表示する" />
                        <MenuItem Header="スコアの高い画像を検索" />
                        <MenuItem Header="タグが一つの画像を検索" />
                    </MenuItem>

                    <MenuItem Header="ツール(_T)">
                        <MenuItem Header="設定(_S)" />
                        <MenuItem Header="スコア決定" />
                        <MenuItem Header="タグ付加実績を表示" />
                    </MenuItem>
                </Menu>
            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="5*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="35px" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <!-- タグリスト検索 -->
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <materialDesign:PackIcon Kind="FileFind" Grid.Column="0" Margin="5,5,0,5"/>

                        <TextBox Grid.Column="1" Margin="5" MaxLines="1" Text="{Binding SearchTagText, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Behaviors>
                                <behaviors:PlaceHolderBehavior PlaceHolderText="タグの検索" />
                            </i:Interaction.Behaviors>

                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding SearchTagCommand}" />
                            </TextBox.InputBindings>
                        </TextBox>
                    </Grid>

                    <!-- タグリスト -->
                    <ListView x:Name="TagTreeList" Grid.Row="1" Margin="5" ItemsSource="{Binding TagTreeItems}" SelectionMode="Single">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="Tag" />
                                    <TextBlock Text="{Binding DispName}" Margin="5,0,0,0" />
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <ei:ChangePropertyAction TargetObject="{Binding Mode=OneWay}" PropertyName="SelectedTagNode" Value="{Binding Path=SelectedItems, ElementName=TagTreeList}"/>
                                <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="TagTreeSelectionChanged"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListView>
                </Grid>

                <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center"/>

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60px" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="50px" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" materialDesign:ShadowAssist.ShadowDepth="Depth3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="4*" />
                        </Grid.ColumnDefinitions>

                        <!-- 表示順序 -->
                        <ComboBox Grid.Column="0" Margin="5">
                            <ComboBoxItem>登録順</ComboBoxItem>
                            <ComboBoxItem>閲覧数順</ComboBoxItem>
                            <ComboBoxItem>タグ割り当て数順</ComboBoxItem>
                        </ComboBox>

                        <ComboBox Grid.Column="1" Margin="5">
                            <ComboBoxItem>昇順</ComboBoxItem>
                            <ComboBoxItem>降順</ComboBoxItem>
                        </ComboBox>

                        <!-- 1ページの表示画像枚数 -->
                        <ComboBox Grid.Column="2" Margin="5" ItemsSource="{Binding PageViewImageCountList}" SelectedItem="{Binding SelectedPageViewImageCount}" SelectedValuePath="DispImageCount">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DispImageCount}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="PageViewImageCountSelectionChanged"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>

                        <!-- サムネイル画像の大きさ切り替え -->
                        <ComboBox Grid.Column="3" Margin="5" ItemsSource="{Binding ThumbnailImageSizeList}" SelectedItem="{Binding SelectedThumbnailImageSize}" SelectedValuePath="DispThumbnailSize">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DispThumbnailSize}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <!-- ページ番号表示 -->
                        <TextBlock Grid.Column="4" Text="{Binding CurrentPageAllPage}" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>

                    <Border Grid.Row="1" BorderThickness="1" BorderBrush="DarkGray" Margin="5">
                        <ListView Name="ThumbnailList" ItemsSource="{Binding ThumbnailImgList}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical" Margin="5">
                                        <Image Margin="2" Source="{Binding DispImage, UpdateSourceTrigger=PropertyChanged}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>

                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel ItemHeight="{Binding ThumbnailItemSizeHeight}" ItemWidth="{Binding ThumbnailItemSizeWidth}"/>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>

                            <!-- 右クリックメニュー -->
                            <ListView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="タグをコピーする"></MenuItem>
                                    <MenuItem Header="タグを貼り付ける"></MenuItem>
                                    <MenuItem Header="削除"></MenuItem>
                                </ContextMenu>
                            </ListView.ContextMenu>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <ei:ChangePropertyAction TargetObject="{Binding Mode=OneWay}" PropertyName="SelectedThumbnailImgList" Value="{Binding Path=SelectedItems, ElementName=ThumbnailList}"/>
                                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="ThumbnailListSelectionChanged"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <i:Interaction.Behaviors>
                                <behaviors:FileDragAndDropBehavior Command="{Binding AddItemsCommand}" />
                            </i:Interaction.Behaviors>

                            <ListView.InputBindings>
                                <KeyBinding Gesture="Enter" Command="{Binding OpenFullScreenViewCommand}" />
                            </ListView.InputBindings>
                        </ListView>
                    </Border>

                    <ProgressBar Grid.Row="2" IsIndeterminate="True" Margin="4" Visibility="{Binding ProgressBarVisible, Converter={StaticResource BoolToVisibility}}" />
                    
                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="60px" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="60px" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <!-- 前のページ -->
                        <Button Grid.Column="1" Margin="5" IsEnabled="{Binding PrevPageButtonIsEnable}" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="前のページへ移動">
                            <materialDesign:PackIcon Kind="ArrowLeftBold" />
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="ShowPrevPage"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>

                        <StackPanel Grid.Column="2" Orientation="Horizontal">
                            <Border BorderThickness="1" BorderBrush="LightGray" Margin="5">
                                <Button Width="40px"  Style="{StaticResource MaterialDesignFlatButton}">1</Button>
                            </Border>
                            <Border BorderThickness="0" BorderBrush="LightGray" Margin="5">
                                <Button Width="40px" Style="{StaticResource MaterialDesignFlatButton}">2</Button>
                            </Border>
                            <Border BorderThickness="0" BorderBrush="LightGray" Margin="5">
                                <Button Width="40px" Style="{StaticResource MaterialDesignFlatButton}">3</Button>
                            </Border>
                            <Border BorderThickness="0" BorderBrush="LightGray" Margin="5">
                                <Button Width="40px" Style="{StaticResource MaterialDesignFlatButton}">4</Button>
                            </Border>
                            <Border BorderThickness="0" BorderBrush="LightGray" Margin="5">
                                <Button Width="40px" Style="{StaticResource MaterialDesignFlatButton}">5</Button>
                            </Border>
                        </StackPanel>
                        
                        <!-- 次のページ -->
                        <Button Grid.Column="3" Margin="5" IsEnabled="{Binding NextPageButtoIsEnable}" Style="{StaticResource MaterialDesignRaisedLightButton}" ToolTip="次のページへ移動">
                            <materialDesign:PackIcon Kind="ArrowRightBold" />
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="ShowNextPage"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </Grid>
                </Grid>

                <GridSplitter Grid.Column="3" Width="5" HorizontalAlignment="Center"/>

                <Grid Grid.Column="4">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="4*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="5*" />
                    </Grid.RowDefinitions>

                    <!-- 画像情報エリア -->
                    <GroupBox Grid.Row="0" Header="画像情報" Style="{DynamicResource MaterialDesignCardGroupBox}" Margin="5">
                        <GroupBox.HeaderTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="ImageArea" Height="32" Width="32" VerticalAlignment="Center" />
                                    <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignSubheadingTextBlock}" Text="{Binding}"/>
                                </StackPanel>
                            </DataTemplate>
                        </GroupBox.HeaderTemplate>

                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" BorderThickness="2" BorderBrush="LightBlue" Margin="5">
                                <Button Width="Auto" Height="Auto">
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Image Source="{Binding SideImage}"></Image>
                                        </ControlTemplate>
                                    </Button.Template>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="OpenFullScreenView"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Border>

                            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center"/>

                            <DockPanel Grid.Column="2" Margin="5" MinWidth="100">
                                <TextBlock DockPanel.Dock="Top" HorizontalAlignment="Stretch">既存のタグ</TextBlock>
                                <ListView DockPanel.Dock="Top" ItemsSource="{Binding SelectedItemHaveTags}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <materialDesign:Chip Content="{Binding Name}" IsDeletable="True"          
                                                IconBackground="{DynamicResource PrimaryHueDarkBrush}"
                                                IconForeground="{DynamicResource PrimaryHueDarkForegroundBrush}">
                                                <materialDesign:Chip.Icon>
                                                    <materialDesign:PackIcon Kind="Tag"></materialDesign:PackIcon>
                                                </materialDesign:Chip.Icon>
                                            </materialDesign:Chip>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </DockPanel>
                        </Grid>
                    </GroupBox>

                    <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    
                    <!-- タグ設定タブ -->
                    <TabControl x:Name="tabControl" Grid.Row="2" Margin="5" ItemsSource="{Binding TabPanels}">
                        <TabControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Header}" />
                            </DataTemplate>
                        </TabControl.ItemTemplate>

                        <TabControl.ContentTemplate>
                            <DataTemplate>
                                <Border  BorderThickness="2" BorderBrush="LightBlue">
                                    <ItemsControl ItemsSource="{Binding Buttons}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Button Content="{Binding Name}" Margin="4" FontSize="16" Command="{Binding ClickCommand}" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel ItemHeight="40" ItemWidth="100" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Border>
                            </DataTemplate>
                        </TabControl.ContentTemplate>
                    </TabControl>
                </Grid>
            </Grid>
        </Grid>
    </materialDesign:DialogHost>
</Window>
